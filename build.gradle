buildscript {
    ext {
        kotlin_version = '1.2.51'
        jib_version = '0.9.7'

        ktor_version = '0.9.2'
        h2_version = '1.4.196'
        exposed_version = '0.10.4'
        slf4j_version = '1.7.25'
        logback_version = '1.2.1'
        junit_version = '4.11'
        detekt_version = '1.0.0.RC8'
    }

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:$jib_version"
        classpath "gradle.plugin.io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detekt_version"

    }
}

group 'com.joshrotenberg'
version '1.0-SNAPSHOT'

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://dl.bintray.com/kotlin/exposed" }
    maven { url "http://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: "com.google.cloud.tools.jib"
apply plugin: "io.gitlab.arturbosch.detekt"

kotlin.experimental.coroutines = 'enable'

mainClassName = 'io.ktor.server.netty.DevelopmentEngine'

dependencies {
    compile group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8", version: "$kotlin_version"

    compile group: "io.ktor", name: "ktor", version: "$ktor_version"
    compile group: "io.ktor", name: "ktor-server-netty", version: "$ktor_version"
    compile group: "io.ktor", name: "ktor-gson", version: "$ktor_version"
    compile group: "io.ktor", name: "ktor-metrics", version: "$ktor_version"

    compile group: "com.h2database", name: "h2", version: "$h2_version"
    compile group: "org.jetbrains.exposed", name: "exposed", version: "$exposed_version"

    compile group: "org.slf4j", name: "slf4j-api", version: "$slf4j_version"
    compile group: "ch.qos.logback", name: "logback-classic", version: "$logback_version"

    testCompile group: "junit", name: "junit", version: "$junit_version"
    testCompile group: "io.ktor", name: "ktor-server-test-host", version: "$ktor_version"

}

//create a single Jar with all dependencies
jar {
    baseName  = project.name
    manifest.attributes(
            "Main-Class": mainClassName
    )
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}


// Copy to an unversioned JAR so we don't have to update the jar
// version in the procfile on update.
task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into 'build/stage/'
    rename {
        'app.jar'
    }
}

stage.mustRunAfter(clean)

detekt {
    version = "$detekt_version"
    defaultProfile {
        input = file("src/main/kotlin")
        filters = ".*/resources/.*,.*/build/.*"
    }
}
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}